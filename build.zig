const std = @import("std");

pub fn build(b: *std.Build) !void {
    const target = b.standardTargetOptions(.{});
    const optimize = b.standardOptimizeOption(.{});

    try std.fs.cwd().copyFile(".devcontainer/__lv_conf.h__", std.fs.cwd(), "lv_conf.h", .{});

    const shared = b.option(bool, "Shared", "Build shared libraries") orelse false;
    const config = b.option(Setup, "Config", "Build configuration") orelse .Core;

    const liblvgl = if (shared)
        b.addSharedLibrary(.{
            .name = "lvgl",
            .target = target,
            .optimize = optimize,
            .version = .{
                .major = 9,
                .minor = 0,
                .patch = 0,
            },
        })
    else
        b.addStaticLibrary(.{
            .name = "lvgl",
            .target = target,
            .optimize = optimize,
            .version = .{
                .major = 9,
                .minor = 0,
                .patch = 0,
            },
        });
    liblvgl.addIncludePath(.{ .path = "." });
    liblvgl.addIncludePath(.{ .path = "src" });
    liblvgl.addCSourceFiles(switch (config) {
        .NXP => src ++ src_nxp,
        .Nuttx => src ++ src_nuttx,
        .SDL => src ++ src_sdl,
        .Core => src,
    }, &[_][]const u8{
        "-Wall",
        "-Wextra",
        "-Wno-format",
        "-Wno-unused-variable",
    });
    liblvgl.pie = true;
    switch (optimize) {
        .Debug, .ReleaseSafe => liblvgl.bundle_compiler_rt = true,
        else => liblvgl.strip = true,
    }
    if (config == .SDL) {
        const sdl_dep = b.dependency("SDL", .{
            .target = target,
            .optimize = optimize,
        });
        const SDL2 = sdl_dep.artifact("SDL2");
        liblvgl.linkLibrary(SDL2);
        if (shared) SDL2.force_pic = true;
        for (SDL2.include_dirs.items) |include| {
            try liblvgl.include_dirs.append(include);
        }
    }
    liblvgl.linkLibC();
    liblvgl.installHeadersDirectoryOptions(.{
        .source_dir = .{ .path = "src" },
        .install_dir = .header,
        .install_subdir = "",
        .exclude_extensions = &.{
            "c",
            "am",
        },
    });
    liblvgl.installHeader("lvgl.h", "lvgl.h");
    liblvgl.installHeader(".devcontainer/__lv_conf.h__", "lv_conf.h");
    b.installArtifact(liblvgl);
}

const src = &[_][]const u8{
    "src/core/lv_group.c",
    "src/core/lv_obj.c",
    "src/core/lv_obj_class.c",
    "src/core/lv_obj_draw.c",
    "src/core/lv_obj_event.c",
    "src/core/lv_obj_id_builtin.c",
    "src/core/lv_obj_pos.c",
    "src/core/lv_obj_property.c",
    "src/core/lv_obj_scroll.c",
    "src/core/lv_obj_style.c",
    "src/core/lv_obj_style_gen.c",
    "src/core/lv_obj_tree.c",
    "src/core/lv_refr.c",
    "src/dev/display/drm/lv_linux_drm.c",
    "src/dev/display/fb/lv_linux_fbdev.c",
    "src/dev/evdev/lv_evdev.c",
    "src/display/lv_display.c",
    "src/draw/lv_draw.c",
    "src/draw/lv_draw_arc.c",
    "src/draw/lv_draw_buf.c",
    "src/draw/lv_draw_image.c",
    "src/draw/lv_draw_label.c",
    "src/draw/lv_draw_line.c",
    "src/draw/lv_draw_mask.c",
    "src/draw/lv_draw_rect.c",
    "src/draw/lv_draw_triangle.c",
    "src/draw/lv_image_buf.c",
    "src/draw/lv_image_decoder.c",
    "src/draw/sw/blend/lv_draw_sw_blend.c",
    "src/draw/sw/blend/lv_draw_sw_blend_to_argb8888.c",
    "src/draw/sw/blend/lv_draw_sw_blend_to_rgb565.c",
    "src/draw/sw/blend/lv_draw_sw_blend_to_rgb888.c",
    "src/draw/sw/lv_draw_sw.c",
    "src/draw/sw/lv_draw_sw_arc.c",
    "src/draw/sw/lv_draw_sw_bg_img.c",
    "src/draw/sw/lv_draw_sw_border.c",
    "src/draw/sw/lv_draw_sw_box_shadow.c",
    "src/draw/sw/lv_draw_sw_fill.c",
    "src/draw/sw/lv_draw_sw_gradient.c",
    "src/draw/sw/lv_draw_sw_img.c",
    "src/draw/sw/lv_draw_sw_letter.c",
    "src/draw/sw/lv_draw_sw_line.c",
    "src/draw/sw/lv_draw_sw_mask.c",
    "src/draw/sw/lv_draw_sw_mask_rect.c",
    "src/draw/sw/lv_draw_sw_transform.c",
    "src/draw/sw/lv_draw_sw_triangle.c",
    "src/font/lv_font.c",
    "src/font/lv_font_dejavu_16_persian_hebrew.c",
    "src/font/lv_font_fmt_txt.c",
    "src/font/lv_font_montserrat_10.c",
    "src/font/lv_font_montserrat_12.c",
    "src/font/lv_font_montserrat_14.c",
    "src/font/lv_font_montserrat_16.c",
    "src/font/lv_font_montserrat_18.c",
    "src/font/lv_font_montserrat_20.c",
    "src/font/lv_font_montserrat_22.c",
    "src/font/lv_font_montserrat_24.c",
    "src/font/lv_font_montserrat_26.c",
    "src/font/lv_font_montserrat_28.c",
    "src/font/lv_font_montserrat_28_compressed.c",
    "src/font/lv_font_montserrat_30.c",
    "src/font/lv_font_montserrat_32.c",
    "src/font/lv_font_montserrat_34.c",
    "src/font/lv_font_montserrat_36.c",
    "src/font/lv_font_montserrat_38.c",
    "src/font/lv_font_montserrat_40.c",
    "src/font/lv_font_montserrat_42.c",
    "src/font/lv_font_montserrat_44.c",
    "src/font/lv_font_montserrat_46.c",
    "src/font/lv_font_montserrat_48.c",
    "src/font/lv_font_montserrat_8.c",
    "src/font/lv_font_simsun_16_cjk.c",
    "src/font/lv_font_unscii_16.c",
    "src/font/lv_font_unscii_8.c",
    "src/indev/lv_indev.c",
    "src/indev/lv_indev_scroll.c",
    "src/layouts/flex/lv_flex.c",
    "src/layouts/grid/lv_grid.c",
    "src/layouts/lv_layout.c",
    "src/lv_init.c",
    "src/misc/lv_anim.c",
    "src/misc/lv_anim_timeline.c",
    "src/misc/lv_area.c",
    "src/misc/lv_async.c",
    "src/misc/lv_bidi.c",
    "src/misc/lv_cache.c",
    "src/misc/lv_cache_builtin.c",
    "src/misc/lv_color.c",
    "src/misc/lv_color_op.c",
    "src/misc/lv_event.c",
    "src/misc/lv_fs.c",
    "src/misc/lv_ll.c",
    "src/misc/lv_log.c",
    "src/misc/lv_lru.c",
    "src/misc/lv_math.c",
    "src/misc/lv_palette.c",
    "src/misc/lv_profiler_builtin.c",
    "src/misc/lv_style.c",
    "src/misc/lv_style_gen.c",
    "src/misc/lv_templ.c",
    "src/misc/lv_text.c",
    "src/misc/lv_text_ap.c",
    "src/misc/lv_timer.c",
    "src/misc/lv_utils.c",
    "src/osal/lv_cmsis_rtos2.c",
    "src/osal/lv_freertos.c",
    "src/osal/lv_os_none.c",
    "src/osal/lv_pthread.c",
    "src/others/file_explorer/lv_file_explorer.c",
    "src/others/fragment/lv_fragment.c",
    "src/others/fragment/lv_fragment_manager.c",
    "src/others/gridnav/lv_gridnav.c",
    "src/others/ime/lv_ime_pinyin.c",
    "src/others/imgfont/lv_imgfont.c",
    "src/others/monkey/lv_monkey.c",
    "src/others/observer/lv_observer.c",
    "src/others/snapshot/lv_snapshot.c",
    "src/others/sysmon/lv_sysmon.c",
    "src/stdlib/builtin/lv_mem_core_builtin.c",
    "src/stdlib/builtin/lv_sprintf_builtin.c",
    "src/stdlib/builtin/lv_string_builtin.c",
    "src/stdlib/builtin/lv_tlsf.c",
    "src/stdlib/clib/lv_mem_core_clib.c",
    "src/stdlib/clib/lv_sprintf_clib.c",
    "src/stdlib/clib/lv_string_clib.c",
    "src/stdlib/lv_mem.c",
    "src/stdlib/micropython/lv_mem_core_micropython.c",
    "src/themes/basic/lv_theme_basic.c",
    "src/themes/default/lv_theme_default.c",
    "src/themes/lv_theme.c",
    "src/themes/mono/lv_theme_mono.c",
    "src/tick/lv_tick.c",
    "src/widgets/animimage/lv_animimage.c",
    "src/widgets/arc/lv_arc.c",
    "src/widgets/bar/lv_bar.c",
    "src/widgets/button/lv_button.c",
    "src/widgets/buttonmatrix/lv_buttonmatrix.c",
    "src/widgets/calendar/lv_calendar.c",
    "src/widgets/calendar/lv_calendar_header_arrow.c",
    "src/widgets/calendar/lv_calendar_header_dropdown.c",
    "src/widgets/canvas/lv_canvas.c",
    "src/widgets/chart/lv_chart.c",
    "src/widgets/checkbox/lv_checkbox.c",
    "src/widgets/dropdown/lv_dropdown.c",
    "src/widgets/image/lv_image.c",
    "src/widgets/imgbtn/lv_imgbtn.c",
    "src/widgets/keyboard/lv_keyboard.c",
    "src/widgets/label/lv_label.c",
    "src/widgets/led/lv_led.c",
    "src/widgets/line/lv_line.c",
    "src/widgets/list/lv_list.c",
    "src/widgets/menu/lv_menu.c",
    "src/widgets/msgbox/lv_msgbox.c",
    "src/widgets/objx_templ/lv_objx_templ.c",
    "src/widgets/roller/lv_roller.c",
    "src/widgets/scale/lv_scale.c",
    "src/widgets/slider/lv_slider.c",
    "src/widgets/span/lv_span.c",
    "src/widgets/spinbox/lv_spinbox.c",
    "src/widgets/spinner/lv_spinner.c",
    "src/widgets/switch/lv_switch.c",
    "src/widgets/table/lv_table.c",
    "src/widgets/tabview/lv_tabview.c",
    "src/widgets/textarea/lv_textarea.c",
    "src/widgets/tileview/lv_tileview.c",
};

const src_nxp = &[_][]const u8{
    "src/draw/nxp/pxp/lv_draw_buf_pxp.c",
    "src/draw/nxp/pxp/lv_draw_pxp.c",
    "src/draw/nxp/pxp/lv_draw_pxp_bg_img.c",
    "src/draw/nxp/pxp/lv_draw_pxp_fill.c",
    "src/draw/nxp/pxp/lv_draw_pxp_img.c",
    "src/draw/nxp/pxp/lv_draw_pxp_layer.c",
    "src/draw/nxp/pxp/lv_pxp_cfg.c",
    "src/draw/nxp/pxp/lv_pxp_osa.c",
    "src/draw/nxp/pxp/lv_pxp_utils.c",
    "src/draw/nxp/vglite/lv_draw_buf_vglite.c",
    "src/draw/nxp/vglite/lv_draw_vglite.c",
    "src/draw/nxp/vglite/lv_draw_vglite_arc.c",
    "src/draw/nxp/vglite/lv_draw_vglite_bg_img.c",
    "src/draw/nxp/vglite/lv_draw_vglite_border.c",
    "src/draw/nxp/vglite/lv_draw_vglite_fill.c",
    "src/draw/nxp/vglite/lv_draw_vglite_img.c",
    "src/draw/nxp/vglite/lv_draw_vglite_label.c",
    "src/draw/nxp/vglite/lv_draw_vglite_layer.c",
    "src/draw/nxp/vglite/lv_draw_vglite_line.c",
    "src/draw/nxp/vglite/lv_vglite_buf.c",
    "src/draw/nxp/vglite/lv_vglite_matrix.c",
    "src/draw/nxp/vglite/lv_vglite_path.c",
    "src/draw/nxp/vglite/lv_vglite_utils.c",
};
const src_sdl = &[_][]const u8{
    "src/dev/sdl/lv_sdl_keyboard.c",
    "src/dev/sdl/lv_sdl_mouse.c",
    "src/dev/sdl/lv_sdl_mousewheel.c",
    "src/dev/sdl/lv_sdl_window.c",
    "src/libs/barcode/code128.c",
    "src/libs/barcode/lv_barcode.c",
    "src/libs/bmp/lv_bmp.c",
    "src/libs/ffmpeg/lv_ffmpeg.c",
    "src/libs/freetype/lv_freetype.c",
    "src/libs/freetype/lv_ftsystem.c",
    "src/libs/fsdrv/lv_fs_cbfs.c",
    "src/libs/fsdrv/lv_fs_fatfs.c",
    "src/libs/fsdrv/lv_fs_memfs.c",
    "src/libs/fsdrv/lv_fs_posix.c",
    "src/libs/fsdrv/lv_fs_stdio.c",
    "src/libs/fsdrv/lv_fs_win32.c",
    "src/libs/gif/gifdec.c",
    "src/libs/gif/lv_gif.c",
    "src/libs/libjpeg_turbo/lv_libjpeg_turbo.c",
    "src/libs/libpng/lv_libpng.c",
    "src/libs/lodepng/lodepng.c",
    "src/libs/lodepng/lv_lodepng.c",
    "src/libs/qrcode/lv_qrcode.c",
    "src/libs/qrcode/qrcodegen.c",
    "src/libs/rlottie/lv_rlottie.c",
    "src/libs/tiny_ttf/lv_tiny_ttf.c",
    "src/libs/tjpgd/lv_tjpgd.c",
    "src/libs/tjpgd/tjpgd.c",
    "src/widgets/win/lv_win.c",
};
const src_nuttx = &[_][]const u8{
    "src/dev/nuttx/lv_nuttx_entry.c",
    "src/dev/nuttx/lv_nuttx_fbdev.c",
    "src/dev/nuttx/lv_nuttx_lcd.c",
    "src/dev/nuttx/lv_nuttx_libuv.c",
    "src/dev/nuttx/lv_nuttx_touchscreen.c",
};

const Setup = enum {
    NXP,
    Nuttx,
    SDL,
    Core,
};
